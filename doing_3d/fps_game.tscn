[gd_scene load_steps=6 format=3 uid="uid://cva1dinlforit"]

[sub_resource type="PlaneMesh" id="PlaneMesh_7vmvy"]
size = Vector2(10.94, 10.36)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_it5fx"]
albedo_color = Color(0.957676, 0.382751, 0.694667, 1)

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_uav4i"]

[sub_resource type="GDScript" id="GDScript_mr3vp"]
script/source = "extends Node3D

@export var score = 0
@export var speed:float = 10
@export var rot_speed =0.5
var controlling = true

var relative:Vector2 = Vector2.ZERO

func _input(event):
	if event is InputEventMouseMotion and controlling:
		relative = event.relative
	if event.is_action_pressed(\"ui_cancel\"):
		if controlling:
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
		else:            
			Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
		controlling = ! controlling
# Called when the node enters the scene tree for the first time.
func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	pass # Replace with function body.

@export var can_move:bool = true

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	rotate(Vector3.DOWN, deg_to_rad(relative.x * deg_to_rad(rot_speed) * delta))
	rotate(transform.basis.x,deg_to_rad(- relative.y * deg_to_rad(rot_speed) * delta))
	relative = Vector2.ZERO
	if can_move:
		var v = Vector3.ZERO
		
		var mult = 1
		if Input.is_key_pressed(KEY_SHIFT):
			mult = 3
		
		var turn = Input.get_axis(\"left\", \"right\") - v.x    
		if abs(turn) > 0:   
			position = position + global_transform.basis.x * speed * turn * mult * delta
			# global_translate(global_transform.basis.x * speed * turn * mult * delta)
		
		var movef = Input.get_axis(\"forward\", \"back\")
		if abs(movef) > 0:     
			global_translate(global_transform.basis.z * speed * movef * mult * delta)
		
		var upanddown = Input.get_axis(\"forward\", \"back\")
		if abs(upanddown) > 0:     
			global_translate(- global_transform.basis.y * speed * upanddown * mult * delta)
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_g25qc"]

[node name="fps_game" type="Node3D"]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -0.0152885, 0.999883, 0, -0.999883, -0.0152885, -0.0774022, 0.975248, -0.173644)
sky_mode = 1

[node name="StaticBody3D" type="StaticBody3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D"]
mesh = SubResource("PlaneMesh_7vmvy")
surface_material_override/0 = SubResource("StandardMaterial3D_it5fx")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
shape = SubResource("WorldBoundaryShape3D_uav4i")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.099807, 0)
script = SubResource("GDScript_mr3vp")
speed = 1.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
shape = SubResource("CapsuleShape3D_g25qc")

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D"]
